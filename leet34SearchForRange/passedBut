class Solution(object):
    def getLeft(self,nums,target):
        left = 0
        right = len(nums)-1
        while (left<=right):
            mid = (left+right)/2
            if (nums[mid]<target):
                left = mid + 1
            else:
                right = mid - 1
        return left
    def getRight(self,nums,target):
        left = 0
        right = len(nums)-1
        while (left<=right):
            mid = (left+right)/2
            if (nums[mid]<=target):
                left = mid + 1
            else:
                right = mid - 1
        return right
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        left = self.getLeft(nums,target)
        right = self.getRight(nums,target)
        if left>right:
            return [-1,-1]
        else:
            return [left,right]
